(constsym, const)
(ident, max)
(eql, =)
(number, 100)
(semicolon, ;)
(varsym, var)
(ident, arg)
(comma, ,)
(ident, ret)
(semicolon, ;)
(procsym, procedure)
(ident, isprime)
(semicolon, ;)
(varsym, var)
(ident, i)
(semicolon, ;)
(beginsym, begin)
(ident, ret)
(becomes, :=)
(number, 1)
(semicolon, ;)
(ident, i)
(becomes, :=)
(number, 2)
(semicolon, ;)
(whilesym, while)
(ident, i)
(lss, <)
(ident, arg)
(dosym, do)
(beginsym, begin)
(ifsym, if)
(ident, arg)
(slash, /)
(ident, i)
(times, *)
(ident, i)
(eql, =)
(ident, arg)
(thensym, then)
(beginsym, begin)
(ident, ret)
(becomes, :=)
(number, 0)
(semicolon, ;)
(ident, i)
(becomes, :=)
(ident, arg)
(endsym, end)
(semicolon, ;)
(ident, i)
(becomes, :=)
(ident, i)
(plussym, +)
(number, 1)
(endsym, end)
(endsym, end)
(semicolon, ;)
(procsym, procedure)
(ident, primes)
(semicolon, ;)
(beginsym, begin)
(ident, arg)
(becomes, :=)
(number, 2)
(semicolon, ;)
(whilesym, while)
(ident, arg)
(lss, <)
(ident, max)
(dosym, do)
(beginsym, begin)
(callsym, call)
(ident, isprime)
(semicolon, ;)
(ifsym, if)
(ident, ret)
(eql, =)
(number, 1)
(thensym, then)
(writesym, write)
(ident, arg)
(semicolon, ;)
(ident, arg)
(becomes, :=)
(ident, arg)
(plussym, +)
(number, 1)
(endsym, end)
(endsym, end)
(semicolon, ;)
(callsym, call)
(ident, primes)
